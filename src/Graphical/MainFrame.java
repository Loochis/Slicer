package Graphical;

import Listeners.MouseListener;
import Listeners.MouseMoveListener;
import Listeners.MouseScrollListener;
import Physics.DrawableSim;
import Physics.KochCurve;
import Physics.PathfindingSim;
import Physics.SierpinskiTriangle;
import Standard.Main;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MainFrame extends JFrame {


    private JPanel panel1;
    private JPanel drawPanel;
    private JButton addParticleButton;
    private JButton PAUSEButton;
    private JButton FWDButton;
    private JButton FFWDButton;
    private JButton FFFWDButton;
    private JButton FFFFWDButton;
    private JButton FFFFFWDButton;
    private JButton funkyModeButton;
    private JSlider trunkSlider;
    private JSlider numSlider;
    private JButton pausePlayButton;
    private JButton recursiveModeButton;
    private JComboBox comboBox1;
    private JPanel FractalControls;
    private JPanel PathfinderControls;
    private JButton clearBoardButton;

    private DrawablePanel drawablePanel;

    /**
     * The main window in which all interaction takes place, sets up buttons and main
     */
    public MainFrame() {
        // Window setup
        $$$setupUI$$$();
        setContentPane(panel1);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        pack();

        // Create instance of main
        Main main = new Main();

        // Gives main and drawablePanel reference to each other
        main.setDrawablePanel(drawablePanel);

        // Set up the combobox
        comboBox1.addItem(new PathfindingSim(100, 70, main));
        comboBox1.addItem(new KochCurve(main));
        comboBox1.addItem(new SierpinskiTriangle(main));

        // Adds listeners to the drawable panel
        drawablePanel.addMouseListener(new MouseListener(main));
        drawablePanel.addMouseMotionListener(new MouseMoveListener(main));
        drawablePanel.addMouseWheelListener(new MouseScrollListener(main));

        // Sets up all buttons and their actions
        drawablePanel.repaint();
        funkyModeButton.addActionListener(e -> main.ToggleFunkyMode());
        trunkSlider.addChangeListener(e -> main.trunk = trunkSlider.getValue());
        numSlider.addChangeListener(e -> main.maxBranches = numSlider.getValue());
        pausePlayButton.addActionListener(e -> main.paused = !main.paused);
        recursiveModeButton.addActionListener(e -> main.recursiveMode = !main.recursiveMode);
        comboBox1.addActionListener(e -> main.ChangeSim((DrawableSim) comboBox1.getSelectedItem()));
    }

    // Turns the drawPanel into a DrawablePanel type which contains all the custom behaviours required, gets reference to new DrawablePanel
    private void createUIComponents() {
        drawPanel = new DrawablePanel();
        drawablePanel = (DrawablePanel) drawPanel;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(8, 13, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-13882324));
        panel1.add(drawPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 11, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(1000, 700), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(7, 1, 1, 11, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(-1, 30), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 11, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(-1, 30), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(0, 12, 8, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, new Dimension(30, -1), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer4, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 8, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, new Dimension(30, -1), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer5 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer5, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 11, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(-1, 20), null, 0, false));
        addParticleButton = new JButton();
        addParticleButton.setBackground(new Color(-2368549));
        addParticleButton.setText("Reset Simulation");
        panel1.add(addParticleButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer6 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer6, new com.intellij.uiDesigner.core.GridConstraints(5, 8, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        PAUSEButton = new JButton();
        PAUSEButton.setBackground(new Color(-5187));
        PAUSEButton.setText("| |");
        panel1.add(PAUSEButton, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 2, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer7 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer7, new com.intellij.uiDesigner.core.GridConstraints(3, 4, 1, 8, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        FFFFFWDButton = new JButton();
        FFFFFWDButton.setBackground(new Color(-65520));
        FFFFFWDButton.setText(">>>>>");
        panel1.add(FFFFFWDButton, new com.intellij.uiDesigner.core.GridConstraints(5, 7, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        FFFFWDButton = new JButton();
        FFFFWDButton.setBackground(new Color(-52992));
        FFFFWDButton.setText(">>>>");
        panel1.add(FFFFWDButton, new com.intellij.uiDesigner.core.GridConstraints(5, 6, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        FFFWDButton = new JButton();
        FFFWDButton.setBackground(new Color(-39680));
        FFFWDButton.setText(">>>");
        panel1.add(FFFWDButton, new com.intellij.uiDesigner.core.GridConstraints(5, 5, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        FFWDButton = new JButton();
        FFWDButton.setBackground(new Color(-29696));
        FFWDButton.setText(">>");
        panel1.add(FFWDButton, new com.intellij.uiDesigner.core.GridConstraints(5, 4, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        FWDButton = new JButton();
        FWDButton.setBackground(new Color(-11918));
        FWDButton.setText(">");
        panel1.add(FWDButton, new com.intellij.uiDesigner.core.GridConstraints(5, 3, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), null, 0, false));
        funkyModeButton = new JButton();
        funkyModeButton.setBackground(new Color(-4438273));
        funkyModeButton.setText("Funky Mode");
        panel1.add(funkyModeButton, new com.intellij.uiDesigner.core.GridConstraints(5, 11, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        clearBoardButton = new JButton();
        clearBoardButton.setBackground(new Color(-4473925));
        clearBoardButton.setText("Clear Board");
        panel1.add(clearBoardButton, new com.intellij.uiDesigner.core.GridConstraints(3, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
